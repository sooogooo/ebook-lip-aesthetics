class Mobile3DViewer{constructor(containerId,options={}){this.containerId=containerId;this.container=document.getElementById(containerId);this.options={enableShadows:true,enablePostProcessing:true,maxPixelRatio:2,targetFPS:60,enableLOD:true,enableFrustumCulling:true,enableBatteryOptimization:true,enableThermalThrottling:true,enableAdaptiveQuality:true,backgroundColor:0x1e1e2e,enableBloom:true,enableSSAO:false,enableRotation:true,enableZoom:true,enablePan:true,enableMultiTouch:true,...options};this.isMobile=this.detectMobile();this.isTablet=this.detectTablet();this.devicePixelRatio=Math.min(window.devicePixelRatio||1,this.options.maxPixelRatio);this.per for manceMonitor=new Mobile3DPer for manceMonitor();this.qualityController=new AdaptiveQualityController();this.gestureHandler=null;this.touchPoints=new Map();this.scene=null;this.camera=null;this.renderer=null;this.controls=null;this.composer=null;this.models=new Map();this.materials=new Map();this.animations=new Map();this.isActive=false;this.isPaused=false;this.currentLOD='high';this.batteryLevel=1.0;this.init();}detectMobile(){return/Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);}detectTablet(){return/iPad|Android(?!.*Mobile)|Kindle|PlayBook|Silk/i.test(navigator.userAgent);}async init(){try{this.setupContainer();await this.init3DEngine();this.setupGestureHandling();this.setupPer for manceMonitoring();await this.loadInitialModels();this.startRenderLoop();this.setupResponsiveBehavior();this.isActive=true;console.log('[3D]Mobile 3D Viewer initialized');}catch(error){console.error('[3D]Initialization failed:',error);throw error;}}setupContainer(){this.container.style.position='relative';this.container.style.width='100%';this.container.style.height='100%';this.container.style.overflow='hidden';this.container.style.touchAction='none';this.container.style.userSelect='none';this.loadingIndicator=document.createElement('div');this.loadingIndicator.className='mobile-3d-loading';this.loadingIndicator.innerHTML=`<div class="loading-spinner"></div><div class="loading-text">Loading 3D Model...</div>`;this.container.appendChild(this.loadingIndicator);}async init3DEngine(){if(typeof THREE==='undefined'){console.error('[3D]THREE.js library not found');throw new Error('THREE.js library is required but not loaded');}this.scene=new THREE.Scene();this.scene.background=new THREE.Color(this.options.backgroundColor);const aspect=this.container.clientWidth/this.container.clientHeight;this.camera=new THREE.PerspectiveCamera(50,aspect,0.1,1000);this.camera.position.set(0,0,10);this.renderer=new THREE.WebGLRenderer({antialias:!this.isMobile,alpha:true,powerPreference:'high-per for mance',stencil:false,depth:true});this.renderer.setSize(this.container.clientWidth,this.container.clientHeight);this.renderer.setPixelRatio(this.devicePixelRatio);if(this.isMobile){this.renderer.shadowMap.enabled=false;this.renderer.outputColorSpace=THREE.SRGBColorSpace||THREE.sRGBEncoding;}else{this.renderer.shadowMap.enabled=this.options.enableShadows;this.renderer.shadowMap.type=THREE.PCFSoftShadowMap;this.renderer.toneMapping=THREE.ACESFilmicToneMapping;this.renderer.toneMappingExposure=1.0;}this.container.appendChild(this.renderer.domElement);this.setupLighting();if(this.options.enablePostProcessing&&!this.isMobile){this.setupPostProcessing();}}setupLighting(){const ambientLight=new THREE.AmbientLight(0xffffff,0.6);this.scene.add(ambientLight);const mainLight=new THREE.DirectionalLight(0xffffff,0.8);mainLight.position.set(5,10,7.5);if(!this.isMobile&&this.options.enableShadows){mainLight.castShadow=true;mainLight.shadow.mapSize.setScalar(1024);mainLight.shadow.camera.near=0.1;mainLight.shadow.camera.far=50;mainLight.shadow.camera.left=-10;mainLight.shadow.camera.right=10;mainLight.shadow.camera.top=10;mainLight.shadow.camera.bottom=-10;}this.scene.add(mainLight);const fillLight=new THREE.DirectionalLight(0x4a90e2,0.3);fillLight.position.set(-5,5,-5);this.scene.add(fillLight);}setupPostProcessing(){if(!window.EffectComposer)return;this.composer=new THREE.EffectComposer(this.renderer);const renderPass=new THREE.RenderPass(this.scene,this.camera);this.composer.addPass(renderPass);if(this.options.enableBloom&&this.per for manceMonitor.canHandleBloom()){const bloomPass=new THREE.UnrealBloomPass(new THREE.Vector2(this.container.clientWidth,this.container.clientHeight),0.3,0.4,0.85);this.composer.addPass(bloomPass);}}setupGestureHandling(){if(window.GestureHandlerFactory){this.gestureHandler=window.GestureHandlerFactory.create('3d',this.renderer.domElement,{enablePinchZoom:this.options.enableZoom,enableDrag:this.options.enableRotation,enablePan:this.options.enablePan,enableMultiTouch:this.options.enableMultiTouch,minScale:0.5,maxScale:3.0});this.gestureHandler.on('drag',({deltaX,deltaY})=>{this.handleRotation(deltaX,deltaY);});this.gestureHandler.on('pinch',({scale})=>{this.handleZoom(scale);});this.gestureHandler.on('pan',({deltaX,deltaY})=>{this.handlePan(deltaX,deltaY);});this.gestureHandler.on('doubleTap',()=>{this.resetView();});}this.setupFallbackTouchHandling();}setupFallbackTouchHandling(){let lastTouchDistance=0;let lastTouchCenter={x:0,y:0};let isRotating=false;this.renderer.domElement.addEventListener('touchstart',(event)=>{event.preventDefault();if(event.touches.length===2){const touch1=event.touches[0];const touch2=event.touches[1];lastTouchDistance=Math.hypot(touch2.clientX-touch1.clientX,touch2.clientY-touch1.clientY);lastTouchCenter={x:(touch1.clientX+touch2.clientX)/2,y:(touch1.clientY+touch2.clientY)/2};}else if(event.touches.length===1){isRotating=true;lastTouchCenter={x:event.touches[0].clientX,y:event.touches[0].clientY};}});this.renderer.domElement.addEventListener('touchmove',(event)=>{event.preventDefault();if(event.touches.length===2){const touch1=event.touches[0];const touch2=event.touches[1];const currentDistance=Math.hypot(touch2.clientX-touch1.clientX,touch2.clientY-touch1.clientY);const scale=currentDistance/lastTouchDistance;this.handleZoom(scale);lastTouchDistance=currentDistance;}else if(event.touches.length===1&&isRotating){const touch=event.touches[0];const deltaX=touch.clientX-lastTouchCenter.x;const deltaY=touch.clientY-lastTouchCenter.y;this.handleRotation(deltaX,deltaY);lastTouchCenter={x:touch.clientX,y:touch.clientY};}});this.renderer.domElement.addEventListener('touchend',()=>{isRotating=false;});}handleRotation(deltaX,deltaY){if(!this.options.enableRotation)return;const rotationSpeed=this.isMobile?0.005:0.01;this.scene.rotation.y+=deltaX*rotationSpeed;this.scene.rotation.x+=deltaY*rotationSpeed;this.scene.rotation.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,this.scene.rotation.x));}handleZoom(scale){if(!this.options.enableZoom)return;const currentDistance=this.camera.position.distanceTo(new THREE.Vector3(0,0,0));const newDistance=currentDistance/scale;const minDistance=3;const maxDistance=20;const clampedDistance=Math.max(minDistance,Math.min(maxDistance,newDistance));const direction=this.camera.position.clone().normalize();this.camera.position.copy(direction.multiplyScalar(clampedDistance));this.camera.lookAt(0,0,0);}handlePan(deltaX,deltaY){if(!this.options.enablePan)return;const panSpeed=this.isMobile?0.002:0.005;const right=new THREE.Vector3();const up=new THREE.Vector3();this.camera.getWorldDirection(new THREE.Vector3());right.setFromMatrixColumn(this.camera.matrix,0);up.setFromMatrixColumn(this.camera.matrix,1);const panOffset=new THREE.Vector3();panOffset.add(right.multiplyScalar(-deltaX*panSpeed));panOffset.add(up.multiplyScalar(deltaY*panSpeed));this.camera.position.add(panOffset);}resetView(){const targetPosition=new THREE.Vector3(0,0,10);const targetRotation=new THREE.Euler(0,0,0);this.animateToView(targetPosition,targetRotation,1000);}animateToView(targetPosition,targetRotation,duration){const startPosition=this.camera.position.clone();const startRotation=this.scene.rotation.clone();const startTime=Date.now();const animate=()=>{const elapsed=Date.now()-startTime;const progress=Math.min(elapsed/duration,1);const eased=this.easeInOutQuad(progress);this.camera.position.lerpVectors(startPosition,targetPosition,eased);this.scene.rotation.x=startRotation.x+(targetRotation.x-startRotation.x)*eased;this.scene.rotation.y=startRotation.y+(targetRotation.y-startRotation.y)*eased;this.scene.rotation.z=startRotation.z+(targetRotation.z-startRotation.z)*eased;if(progress<1){requestAnimationFrame(animate);}};animate();}easeInOutQuad(t){return t<0.5?2*t*t:-1+(4-2*t)*t;}setupPer for manceMonitoring(){if(navigator.getBattery){navigator.getBattery().then(battery=>{this.batteryLevel=battery.level;this.adjustQualityForBattery();battery.addEventListener('levelchange',()=>{this.batteryLevel=battery.level;this.adjustQualityForBattery();});});}setInterval(()=>{const metrics=this.per for manceMonitor.getMetrics();this.qualityController.adjustQuality(metrics);},1000);if(per for mance.memory){setInterval(()=>{const memoryUsage=per for mance.memory.usedJSHeapSize/per for mance.memory.jsHeapSizeLimit;if(memoryUsage>0.8){this.reduceQuality();}},5000);}}adjustQualityForBattery(){if(this.batteryLevel<0.2){this.setQuality('low');}else if(this.batteryLevel<0.5){this.setQuality('medium');}else{this.setQuality('high');}}setQuality(level){this.currentLOD=level;switch(level){case 'low':this.renderer.setPixelRatio(Math.min(1,this.devicePixelRatio));this.disablePostProcessing();this.reduceMaterialQuality();break;case 'medium':this.renderer.setPixelRatio(Math.min(1.5,this.devicePixelRatio));this.enableBasicPostProcessing();this.setMediumMaterialQuality();break;case 'high':this.renderer.setPixelRatio(this.devicePixelRatio);this.enableFullPostProcessing();this.setHighMaterialQuality();break;}console.log(`[3D]Quality set to:${level}`);}disablePostProcessing(){this.composer=null;}enableBasicPostProcessing(){if(this.isMobile)return;this.setupPostProcessing();}enableFullPostProcessing(){if(!this.isMobile){this.setupPostProcessing();}}reduceMaterialQuality(){this.materials.forEach(material=>{if(material.map)material.map.generateMipmaps=false;if(material.normalMap)material.normalMap=null;if(material.roughnessMap)material.roughnessMap=null;});}setMediumMaterialQuality(){this.materials.forEach(material=>{if(material.map)material.map.generateMipmaps=true;});}setHighMaterialQuality(){this.materials.forEach(material=>{if(material.map)material.map.generateMipmaps=true;});}async loadInitialModels(){try{let lipModel;try{lipModel=await this.loadModel('/models/lip_anatomy.gltf');this.models.set('lipAnatomy',lipModel);}catch(error){console.warn('[3D]GLTF model loading failed,creating fallback:',error);lipModel=this.createFallbackModel();this.models.set('lipAnatomy',lipModel);}await this.createLODVersions(lipModel);this.loadingIndicator.style.display='none';}catch(error){console.error('[3D]Model loading comp let ely failed:',error);this.showErrorMessage('Failed to load 3D model');}}createFallbackModel(){const lipGroup=new THREE.Group();const upperLipGeometry=new THREE.SphereGeometry(1.5,16,8,0,Math.PI*2,0,Math.PI/2);const upperLipMaterial=new THREE.MeshPhongMaterial({color:0xd4af37,shininess:30});const upperLip=new THREE.Mesh(upperLipGeometry,upperLipMaterial);upperLip.position.y=0.5;upperLip.scale.set(1.2,0.6,0.8);const lowerLipGeometry=new THREE.SphereGeometry(1.2,16,8,0,Math.PI*2,Math.PI/2,Math.PI/2);const lowerLipMaterial=new THREE.MeshPhongMaterial({color:0xb8941f,shininess:30});const lowerLip=new THREE.Mesh(lowerLipGeometry,lowerLipMaterial);lowerLip.position.y=-0.3;lowerLip.scale.set(1.1,0.5,0.7);lipGroup.add(upperLip);lipGroup.add(lowerLip);this.scene.add(lipGroup);console.log('[3D]Fallback 3D model created');return lipGroup;}async loadModel(url){return new Promise((resolve,reject)=>{if(typeof THREE.GLTFLoader==='undefined'){reject(new Error('GLTFLoader not available'));return;}const loader=new THREE.GLTFLoader();loader.load(url,(gltf)=>{const model=gltf.scene;this.optimizeModel(model);this.scene.add(model);resolve(model);},(progress)=>{const percentComp let e=(progress.loaded/progress.total)*100;console.log('[3D]Loading progress:',percentComp let e+'%');},reject);});}optimizeModel(model){model.traverse(child=>{if(child.isMesh){child.frustumCulled=true;if(child.geometry){child.geometry.computeBoundingSphere();child.geometry.computeBoundingBox();}if(child.material){this.optimizeMaterial(child.material);this.materials.set(child.uuid,child.material);}if(!this.isMobile){child.castShadow=true;child.receiveShadow=true;}}});}optimizeMaterial(material){if(this.isMobile){material.shininess=Math.min(material.shininess||30,30);if(material.envMap){material.envMapIntensity=0.5;}}}async createLODVersions(model){const lodLevels=[{distance:0,simpl if ication:1.0},{distance:10,simpl if ication:0.5},{distance:20,simpl if ication:0.25}];const lod=new THREE.LOD();lodLevels.forEach(level=>{const lodModel=model.clone();if(level.simpl if ication<1.0){this.simpl if yModel(lodModel,level.simpl if ication);}lod.addLevel(lodModel,level.distance);});this.scene.remove(model);this.scene.add(lod);}simpl if yModel(model,factor){model.traverse(child=>{if(child.isMesh&&child.geometry){const geometry=child.geometry;const positions=geometry.attributes.position.array;const simpl if ied=this.decimateGeometry(positions,factor);geometry.setAttribute('position',new THREE.Float32BufferAttribute(simpl if ied,3));geometry.computeVertexNormals();}});}decimateGeometry(positions,factor){const step=Math.round(1/factor);const simpl if ied=[];for(let i=0;i<positions.length;i+=3*step){if(i+2<positions.length){simpl if ied.push(positions[i],positions[i+1],positions[i+2]);}}return new Float32Array(simpl if ied);}setupResponsiveBehavior(){window.addEventListener('resize',()=>{this.handleResize();});window.addEventListener('orientationchange',()=>{setTimeout(()=>this.handleResize(),500);});document.addEventListener('visibilitychange',()=>{if(document.hidden){this.pause();}else{this.resume();}});}handleResize(){const width=this.container.clientWidth;const height=this.container.clientHeight;this.camera.aspect=width/height;this.camera.updateProjectionMatrix();this.renderer.setSize(width,height);if(this.composer){this.composer.setSize(width,height);}}startRenderLoop(){const render=()=>{if(!this.isActive||this.isPaused){requestAnimationFrame(render);return;}this.per for manceMonitor.frameStart();if(this.composer){this.composer.render();}else{this.renderer.render(this.scene,this.camera);}this.per for manceMonitor.frameEnd();requestAnimationFrame(render);};render();}pause(){this.isPaused=true;}resume(){this.isPaused=false;}showErrorMessage(message){this.loadingIndicator.innerHTML=`<div class="error-icon">⚠️</div><div class="error-text">${message}</div><button onclick="location.reload()" class="retry-button">Retry</button>`;}destroy(){this.isActive=false;if(this.gestureHandler){this.gestureHandler.destroy();}if(this.scene){this.scene.clear();}if(this.renderer){this.renderer.dispose();this.renderer.domElement.remove();}this.materials.forEach(material=>material.dispose());this.models.forEach(model=>{model.traverse(child=>{if(child.geometry)child.geometry.dispose();if(child.material)child.material.dispose();});});console.log('[3D]Mobile 3D Viewer destroyed');}}class Mobile3DPer for manceMonitor{constructor(){this.frameCount=0;this.startTime=Date.now();this.lastFrameTime=Date.now();this.frameTimes=[];this.maxFrameTimes=60;}frameStart(){this.frameStartTime=per for mance.now();}frameEnd(){const frameTime=per for mance.now()-this.frameStartTime;this.frameTimes.push(frameTime);if(this.frameTimes.length>this.maxFrameTimes){this.frameTimes.sh if t();}this.frameCount++;this.lastFrameTime=Date.now();}getMetrics(){const currentTime=Date.now();const elapsed=(currentTime-this.startTime)/1000;const fps=this.frameCount/elapsed;const avgFrameTime=this.frameTimes.reduce((a,b)=>a+b,0)/this.frameTimes.length;const maxFrameTime=Math.max(...this.frameTimes);return{fps:Math.round(fps),avgFrameTime:Math.round(avgFrameTime),maxFrameTime:Math.round(maxFrameTime),frameCount:this.frameCount};}canHandleBloom(){const metrics=this.getMetrics();return metrics.fps>50&&metrics.avgFrameTime<16;}}class AdaptiveQualityController{constructor(){this.targetFPS=60;this.qualityLevels=['low','medium','high'];this.currentQualityIndex=2;this.adjustmentCooldown=3000;this.lastAdjustment=0;}adjustQuality(metrics){const now=Date.now();if(now-this.lastAdjustment<this.adjustmentCooldown)return;if(metrics.fps<this.targetFPS*0.8&&this.currentQualityIndex>0){this.currentQualityIndex--;this.lastAdjustment=now;return this.qualityLevels[this.currentQualityIndex];}else if(metrics.fps>this.targetFPS*0.95&&this.currentQualityIndex<this.qualityLevels.length-1){this.currentQualityIndex++;this.lastAdjustment=now;return this.qualityLevels[this.currentQualityIndex];}return null;}}if(typeof module!=='undefined'&&module.exports){module.exports={Mobile3DViewer,Mobile3DPer for manceMonitor,AdaptiveQualityController};}window.Mobile3DViewer=Mobile3DViewer;window.Mobile3DPer for manceMonitor=Mobile3DPer for manceMonitor;window.AdaptiveQualityController=AdaptiveQualityController;console.log('[3D]Mobile 3D Viewer module loaded');